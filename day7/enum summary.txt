ENUM 

1.tarting from Flutter 3.0, Dart introduced enhanced enums as a new feature.
Enhanced enums extend the capabilities of traditional enums by allowing you 
to associate behavior (methods) and additional properties with each enum value.

2.Enhanced enums are defined using the enum keyword followed by the name of the
 enum class.
 Each value in the enum is defined as a constant and can have its own set of
properties and methods.

3.Properties and Methods: Enhanced enums can have properties and methods just
 like regular classes. This means you can define behavior specific to each enum
value, making your code more expressive and concise.

4.Switch Statements: Enhanced enums are particularly useful when used in switch
 statements. You can switch on the enum values and easily handle different cases 
 based on the enum values. This improves readability and reduces the likelihood of
 errors.

 example : enum color {red,white,black};